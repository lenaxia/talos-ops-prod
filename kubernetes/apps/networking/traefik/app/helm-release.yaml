---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: traefik
      version: 28.3.0  # Updated chart version
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      name: traefik
      tag: v3.0.0  # Updated Traefik version
    deployment:
      kind: Deployment
      replicas: 3
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    service:
      enabled: true
      type: LoadBalancer
      spec:
        loadBalancerIP: "${SVC_TRAEFIK_ADDR}"
        externalTrafficPolicy: Local
      annotations:
        external-dns.home.arpa/enabled: "true"
        external-dns.alpha.kubernetes.io/hostname: "${SECRET_DEV_DOMAIN}"
      labels:
        cilium.io/l2-ip-pool: reserved
    logs:
      general:
        format: json
        level: INFO
      access:
        enabled: true
        format: json
    experimental:
      plugins:
        htransformation:
          moduleName: github.com/tomMoulard/htransformation
          version: v0.3.1
        ldapAuth:
          moduleName: github.com/wiltonsr/ldapAuth
          version: v0.1.10
    ingressClass:
      enabled: true
      isDefaultClass: true
      fallbackApiVersion: v1
    ingressRoute:
      dashboard:
        enabled: false
    globalArguments:
      - "--api.insecure=true"
      - "--serverstransport.insecureskipverify=true"
      - "--providers.kubernetesingress.ingressclass=traefik"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"
    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=${SVC_TRAEFIK_ADDR}"
      - "--providers.kubernetesingress.allowexternalnameservices=true"
      - "--providers.kubernetescrd.allowexternalnameservices=true"
    ports:
      web:
        redirectTo:
          port: websecure
      websecure:
        tls:
          enabled: true
          options: "default"
        transport:
          respondingTimeouts:
            readTimeout: 30s
            writeTimeout: 30s
            idleTimeout: 180s
      metrics:
        port: 8082
        exposedPort: 8082
    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
    pilot:
      enabled: false
    metrics:
      prometheus:
        entryPoint: metrics
        addRoutersLabels: true
        serviceMonitor:
          jobLabel: traefik
          interval: 30s
          honorLabels: true
          honorTimestamps: true
          enableHttp2: true
        prometheusRule:
          additionalLabels: {}
          rules:
            - alert: TraefikDown
              expr: up{job="traefik"} == 0
              for: 5m
              labels:
                context: traefik
                severity: warning
              annotations:
                summary: "Traefik Down"
                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 500Mi
