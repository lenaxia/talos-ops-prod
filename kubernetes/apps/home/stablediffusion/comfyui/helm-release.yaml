---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app comfyui
  namespace: &namespace home
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 4
      strategy: rollback
  values:
    controllers:
      comfyui:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          runtimeClassName: nvidia
        containers:
          app:
            image:
              repository: ghcr.io/lenaxia/comfyui-boot
              tag: cu124-slim-20250714@sha256:a8244e3219dc1f95e16fbe779d65300e9d32c39b5ae49d0a6a2408c54579dbcc
            env:
              #- name: NVIDIA_VISIBLE_DEVICES
              #  value: "GPU-6726851a-d64e-09c8-a938-1537593e3106"
              - name: PORT
                value: "8188"
              - name: CLI_ARGS
                value: "--listen 0.0.0.0 --port 8188"
              - name: LD_PRELOAD
                value: "/usr/lib64/libjpeg.so.8"
              - name: LD_LIBRARY_PATH
                value: "/usr/local/lib64/python3.12/site-packages/torch/lib:/usr/local/lib/python3.12/site-packages/nvidia/cublas/lib:/usr/local/lib/python3.12/site-packages/nvidia/cudnn/lib"
            securityContext:
              runAsUser: 0  # Runs as root as per Dockerfile
              privileged: false  # Not needed despite root
            resources:
              requests:
                nvidia.com/gpu: 1
                cpu: 2000m  # Higher CPU needed for compilation
                memory: 4Gi
              limits:
                nvidia.com/gpu: 1
    service:
      app:
        controller: comfyui
        ports:
          http:
            port: 8188
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: baby-bottle-outline
          hajimari.io/info: *app
          hajimari.io/group: *namespace
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri comfy.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
    persistence:
      models:
        enabled: true
        existingClaim: comfyui-output
        globalMounts:
          - path: /root/mnt
#      output:
#        enabled: true
#        existingClaim: comfyui-output
#        globalMounts:
#          - path: /root/output
#      custom-nodes:
#        enabled: true
#        existingClaim: comfyui-custom-nodes
#        globalMounts:
#          - path: /root/custom_nodes
#      user:
#        enabled: true
#        existingClaim: comfyui-custom-user
#        globalMounts:
#          - path: /root/user
